apply plugin: 'com.android.application'

android {
    lintOptions {
          abortOnError false
    }
    signingConfigs {
        release
    }
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "com.ogsteam.ogspy"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 27
        versionName "1.6.6.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        jackOptions {
            enabled true
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        // Enabling multidex support.
        multiDexEnabled true
    }
    buildTypes {
        def BOOLEAN = "boolean"
        def TRUE = "true"
        def FALSE = "false"
        def LOG_HTTP_REQUESTS = "LOG_HTTP_REQUESTS"
        def REPORT_CRASHES = "REPORT_CRASHES"

        debug {
            buildConfigField BOOLEAN, LOG_HTTP_REQUESTS, TRUE
            buildConfigField BOOLEAN, REPORT_CRASHES, TRUE
        }
        release {
            buildConfigField BOOLEAN, LOG_HTTP_REQUESTS, FALSE
            buildConfigField BOOLEAN, REPORT_CRASHES, TRUE
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    if (project.hasProperty("AndroidProject.signing") && new File(project.property("AndroidProject.signing").toString()).exists()) {
        def Properties props = new Properties()
        def propFile = new File(project.property("AndroidProject.signing").toString())
        if(propFile.canRead()) {
            props.load(new FileInputStream(propFile))
            // Signin properties
            if (props!=null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
                android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
                android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
                android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
                android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
            } else {
                println 'androidproject.properties found but some entries of sigin are missing'
                android.buildTypes.release.signingConfig = null
            }
        } else {
            println 'androidproject.properties file not found'
            android.buildTypes.release.signingConfig = null
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}

apply plugin: 'com.github.triplet.play'

play {
    def Properties props = new Properties()
    def propFile = new File(project.property("AndroidProject.signing").toString())
    if(propFile.canRead()) {
        props.load(new FileInputStream(propFile))
    }
    serviceAccountEmail = props['SERVICE_ACCOUNT_EMAIL']
    pk12File = file(props['PK12_FILE'])
    track = 'beta'
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
//    compile('com.squareup.retrofit2:converter-gson:2.1.0') {
//        exclude module: 'gson'
//    }
    compile group: 'joda-time', name: 'joda-time', version: '2.9.4'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:design:25.1.1'
    compile 'com.google.android.gms:play-services-analytics:10.0.1'
    compile 'com.jakewharton:butterknife:8.4.0'
    compile 'com.android.support:appcompat-v7:25.1.1'
    // REST
    compile group: 'com.squareup.retrofit2', name: 'converter-jackson', version: '2.1.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
//    compile 'com.google.code.gson:gson:2.7'
    compile 'org.springframework.android:spring-android-rest-template:2.0.0.M3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.2'
    // Firebase
    compile 'com.google.firebase:firebase-core:9.4.0'
    compile 'com.google.firebase:firebase-crash:9.4.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.jakewharton:butterknife:8.4.0'
    testCompile 'junit:junit:4.12'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
}

apply plugin: 'com.google.gms.google-services'
